<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2015r4

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:agt="http://www.altova.com/Mapforce/agt" xmlns:xs="http://www.w3.org/2001/XMLSchema" exclude-result-prefixes="agt xs">
	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>
	<xsl:template name="agt:MapToCatrisks_OED_ModelLoc_New_Lookup_var18_create_rec">
		<xsl:param name="var17_current"/>
		<rec>
			<xsl:variable name="var1_ROWID">
				<xsl:if test="$var17_current/@ROW_ID">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:if test="string(boolean(string($var1_ROWID))) != 'false'">
				<xsl:attribute name="LocNumber">
					<xsl:value-of select="string($var17_current/@ROW_ID)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var2_GeogScheme">
				<xsl:if test="$var17_current/@GeogScheme1">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="GeogScheme1">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var2_GeogScheme))) != 'false'">
						<xsl:value-of select="string($var17_current/@GeogScheme1)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="''"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var3_GeogName">
				<xsl:if test="$var17_current/@GeogName1">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="GeogName1">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var3_GeogName))) != 'false'">
						<xsl:value-of select="string($var17_current/@GeogName1)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="''"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var4_GeogScheme">
				<xsl:if test="$var17_current/@GeogScheme2">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="GeogScheme2">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var4_GeogScheme))) != 'false'">
						<xsl:value-of select="string($var17_current/@GeogScheme2)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="''"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var5_GeogName">
				<xsl:if test="$var17_current/@GeogName2">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="GeogName2">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var5_GeogName))) != 'false'">
						<xsl:value-of select="string($var17_current/@GeogName2)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="''"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var6_GeogScheme">
				<xsl:if test="$var17_current/@GeogScheme3">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="GeogScheme3">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var6_GeogScheme))) != 'false'">
						<xsl:value-of select="string($var17_current/@GeogScheme3)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="''"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var7_GeogName">
				<xsl:if test="$var17_current/@GeogName3">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="GeogName3">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var7_GeogName))) != 'false'">
						<xsl:value-of select="string($var17_current/@GeogName3)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="''"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var8_GeogScheme">
				<xsl:if test="$var17_current/@GeogScheme4">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="GeogScheme4">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var8_GeogScheme))) != 'false'">
						<xsl:value-of select="string($var17_current/@GeogScheme4)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="''"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var9_GeogName">
				<xsl:if test="$var17_current/@GeogName4">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="GeogName4">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var9_GeogName))) != 'false'">
						<xsl:value-of select="string($var17_current/@GeogName4)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="''"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var10_GeogScheme">
				<xsl:if test="$var17_current/@GeogScheme5">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="GeogScheme5">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var10_GeogScheme))) != 'false'">
						<xsl:value-of select="string($var17_current/@GeogScheme5)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="''"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var11_GeogName">
				<xsl:if test="$var17_current/@GeogName5">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="GeogName5">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var11_GeogName))) != 'false'">
						<xsl:value-of select="string($var17_current/@GeogName5)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="''"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var12_Longitude">
				<xsl:if test="$var17_current/@Longitude">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="Longitude">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var12_Longitude))) != 'false'">
						<xsl:value-of select="string($var17_current/@Longitude)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="''"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var13_Latitude">
				<xsl:if test="$var17_current/@Latitude">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="Latitude">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var13_Latitude))) != 'false'">
						<xsl:value-of select="string($var17_current/@Latitude)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="''"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var14_CountryCode">
				<xsl:if test="$var17_current/@CountryCode">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="CountryCode">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var14_CountryCode))) != 'false'">
						<xsl:value-of select="string($var17_current/@CountryCode)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="''"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var15_ConstructionCode">
				<xsl:if test="$var17_current/@ConstructionCode">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="ConstructionCode">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var15_ConstructionCode))) != 'false'">
						<xsl:value-of select="string($var17_current/@ConstructionCode)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="'5000'"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var16_OccupancyCode">
				<xsl:if test="$var17_current/@OccupancyCode">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="OccupancyCode">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var16_OccupancyCode))) != 'false'">
						<xsl:value-of select="string($var17_current/@OccupancyCode)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="'1000'"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
		</rec>
	</xsl:template>
	<xsl:template name="agt:MapToCatrisks_OED_ModelLoc_New_Lookup_var20_resultof_map">
		<xsl:param name="var19_current"/>
		<xsl:for-each select="$var19_current/rec">
			<xsl:call-template name="agt:MapToCatrisks_OED_ModelLoc_New_Lookup_var18_create_rec">
				<xsl:with-param name="var17_current" select="."/>
			</xsl:call-template>
		</xsl:for-each>
	</xsl:template>
	<xsl:template match="/">
		<root>
			<xsl:attribute name="xsi:noNamespaceSchemaLocation" namespace="http://www.w3.org/2001/XMLSchema-instance">C:/Users/Administrator/Desktop/git/Catrisks/flamingo/ValidationFiles/Catrisks_OED_ModelLoc_New_Lookup.xsd</xsl:attribute>
			<xsl:for-each select="root">
				<xsl:call-template name="agt:MapToCatrisks_OED_ModelLoc_New_Lookup_var20_resultof_map">
					<xsl:with-param name="var19_current" select="."/>
				</xsl:call-template>
			</xsl:for-each>
		</root>
	</xsl:template>
</xsl:stylesheet>
