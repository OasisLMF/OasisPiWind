#  ==============================================================================
#  Workflow description:
#    Runs the command line interface of OasisLMF package on the PiWind model.
#    Multiple versions of python are tested and be extending via
#    the `py-version` test matrix.
#
#    Loss results are not checked and the workflow should only fail on:
#      1. Package installation failure when pip installing 'oasislmf'
#      2. An invocation error or python exception when executing 'oasislmf model run ..'
#      3. Empty files are produced (either input files / or results)
#  ==============================================================================

name: PiWind MDK

on:
  push:
  workflow_dispatch:
    inputs:
      mdk_branch:
        description: 'Branch to test from Oasislmf repo - https://github.com/OasisLMF/OasisLMF'
        required: true
        default: develop
      mdk_run_type:
        description: 'Loss modes to test, options are one of "[gul, il, ri]"'
        required: true
        default: ri

  workflow_call:
    inputs:
      mdk_branch:
        description: 'Branch to test from Oasislmf repo - https://github.com/OasisLMF/OasisLMF'
        required: true
        type: string
      mdk_run_type:
        description: 'Loss modes to test, options are one of "[gul, il, ri]"'
        required: true
        type: string
      piwind_branch:
        description: 'Branch of PiWind to test (Only needed for remote triggers)'
        required: true
        type: string

env:
  # Input vars (defaults)
  #SCRIPT_BRANCH: 'master'
  SCRIPT_BRANCH: 'hotfix/dockerbuild-actions' # TESTING
  PIWIND_BRANCH:  ${{ github.ref }}
  MDK_BRANCH: 'develop'
  MDK_RUN: 'ri'

jobs:
  run_mdk:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        py-version: [3.8, 3.9]
    steps:
      - name: Github context
        run:   echo "$GITHUB_CONTEXT"
        shell: bash
        env:
         GITHUB_CONTEXT: ${{ toJson(github) }}

      - name: Fetch CLI test script
        run: |
          BASE_URL="https://raw.githubusercontent.com/OasisLMF/OasisPiWind/${{ env.SCRIPT_BRANCH }}/tests"
          wget $BASE_URL/run_mdk.py
          chmod +x run_mdk.py

      - name: Set input - piwind_branch
        if: inputs.piwind_branch != ''
        run: echo "PIWIND_BRANCH=${{ inputs.piwind_branch }}" >> $GITHUB_ENV

      - name: Set input - mdk_branch
        if: inputs.mdk_branch != ''
        run: echo "MDK_BRANCH=${{ inputs.mdk_branch }}" >> $GITHUB_ENV

      - name: Set input - mdk_run
        if: inputs.mdk_run_type != ''
        run: echo "MDK_RUN=${{ inputs.mdk_run_type }}" >> $GITHUB_ENV

      - name: Set Production mode for testing master branch (MDK)
        if: |
          github.event_name == 'push' &&
          (env.MDK_BRANCH == 'master' || contains(env.MDK_BRANCH, 'hotfix'))
        run: |
          echo "PIWIND_BRANCH=master" >> $GITHUB_ENV

      - name: Set Production mode for testing master branch (PiWind)
        if: |
          github.event_name == 'push' &&
          (env.PIWIND_BRANCH == 'master' || contains(env.PIWIND_BRANCH, 'hotfix'))
        run: |
          echo "MDK_BRANCH=master" >> $GITHUB_ENV

      - name: Setup Python ${{ matrix.py-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py-version }}

      - name: run MDK
        run: |
           ./run_mdk.py --model-repo-branch ${{ env.PIWIND_BRANCH}} \
                              --mdk-repo-branch ${{ env.MDK_BRANCH }} \
                              --model-run-mode ${{ env.MDK_RUN }}
