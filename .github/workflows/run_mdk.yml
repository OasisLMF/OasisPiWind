name: build

on:
  push:
  workflow_dispatch:
    inputs:
      build_branch:
        description: 'Branch of build script repo - https://github.com/OasisLMF/build'     
        required: true
        default: master
      mdk_branch:
        description: 'Branch to test from Oasislmf repo - https://github.com/OasisLMF/OasisLMF'
        required: true
        default: develop
      mdk_run_type:  
        description: 'Loss modes to test, options are one of "[gul, il, ri]"'     
        required: true
        default: ri

env:
  # model_git_url: OasisLMF/OasisPiWind.git
  BUILD_REPO: OasisLMF/build
  BUILD_BRANCH: ${{ github.event.inputs.build_branch: }}
  BUILD_WORKSPACE: oasis_build
  MODEL_WORKSPACE: ${{ github.workspace }}/piwind_workspace
  MODEL_BRANCH: ${{ github.ref_name }}
  MDK_BRANCH: ${{ github.event.inputs.build_branch }}
  MDK_RUN: ${{ github.event.inputs.mdk_branch }}

jobs:
  run_mdk:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        py-version: [3.8, 3.9]
    steps:
      - name: clone PiWind repository
        uses: actions/checkout@v3
        with:
          submodules: true
          path: ${{ env.MODEL_WORKSPACE }}
      - name: clone build repository
        uses: actions/checkout@v3
        with:
          repository: ${{ env.BUILD_REPO }}
          ref: ${{ env.BUILD_BRANCH }}
          path: ${{ env.BUILD_WORKSPACE }}
      - name: run MDK
        working-directory: ${{ env.BUILD_WORKSPACE }}
        run: |
          sed -i 's/FROM.*/FROM python:${{ matrix.py-version }}/g' docker/Dockerfile.mdk-tester
          docker build -f docker/Dockerfile.mdk-tester -t mdk-runner:${{ matrix.py-version }} .
          docker run mdk-runner:${{ matrix.py-version }} --model-repo-branch ${{ env.MODEL_BRANCH}} --mdk-repo-branch ${{ env.MDK_BRANCH }} --model-run-mode ${{ env.MDK_RUN }}
