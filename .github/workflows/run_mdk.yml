name: build

on:
  push

env:
  # model_git_url: OasisLMF/OasisPiWind.git
  BUILD_REPO: OasisLMF/build
  BUILD_BRANCH: master
  BUILD_WORKSPACE: oasis_build
  MODEL_WORKSPACE: ${{ github.workspace }}/piwind_workspace
  MODEL_BRANCH: ${{ github.ref_name }}
  RUN_MDK: true
  MDK_BRANCH: develop
  MDK_RUN: ri

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        py-version: [3.8, 3.9]
    steps:
      - name: clone PiWind repository
        uses: actions/checkout@v3
        with:
          submodules: true
          path: ${{ env.MODEL_WORKSPACE }}
      - name: clone build repository
        uses: actions/checkout@v3
        with:
          repository: ${{ env.BUILD_REPO }}
          ref: ${{ env.BUILD_BRANCH }}
          path: ${{ env.BUILD_WORKSPACE }}
      - name: udate MDK branch based on model branch
        if: env.MODEL_BRANCH == 'master' || contains(env.MODEL_BRANCH, 'hotfix')
        run: echo "env.=master" >> $GITHUB_ENV 
      - name: run MDK
        if: env.RUN_MDK == 'true'
        working-directory: ${{ env.BUILD_WORKSPACE }}
        run: |
          sed -i 's/FROM.*/FROM python:${{ matrix.py-version }}/g' docker/Dockerfile.mdk-tester
          docker build -f docker/Dockerfile.mdk-tester -t mdk-runner:${{ matrix.py-version }} .
          docker run mdk-runner:${{ matrix.py-version }} --model-repo-branch ${{ env.MODEL_BRANCH}} --mdk-repo-branch ${{ env.MDK_BRANCH }} --model-run-mode ${{ env.MDK_RUN }}
