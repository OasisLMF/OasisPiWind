name: Build worker

on:
  push:  # TESTING ONLY
  workflow_dispatch:
    inputs:
      docker_push:
        description: 'Push the docker image to dockerhub and outout reference'
        required: false
        type: boolean
      from_image:
        description: 'The worker image to build piwind'
        required: false
        default: 'coreoasis/model_worker:latest'
      piwind_image:
        description: 'Output image name and tag'
        default: 'coreoasis/github-actions:piwind_worker-<sha>'
        required: false

  workflow_call:
    inputs:
      docker_push:
        description: 'Push the docker image to dockerhub and outout reference'
        required: false
        type: string
      from_image:
        description: 'The worker image to build piwind'
        required: false
        type: string
      piwind_image:
        description: 'Output image name and tag'
        required: false
        type: string
      piwind_branch:
        description: '(Remote call) branch to build piwind worker from'
        required: false
        type: string

    outputs:
      piwind_image:
        description:
        value: ${{ jobs.build_piwind.outputs.image }}

jobs:
  build_piwind:
    name: Build PiWind Worker
    env:
      PIWIND_IMAGE: 'coreoasis/github-actions:piwind_worker-${{ github.sha }}'
      PIWIND_BRANCH: ${{ github.ref_name }}
      FROM_IMAGE: 'coreoasis/model_worker'             # the worker image to build from
      FROM_TAG:   'latest'                             # the worker version to build from
      DOCKERFILE: 'docker/Dockerfile.piwind_worker'

    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.docker_push.outputs.image }}
    steps:
    - name: Set inputs
      run: |
        [[ -z "${{ inputs.piwind_image }}" ]] || echo "PIWIND_IMAGE=${{ inputs.piwind_image }}" >> $GITHUB_ENV
        [[ -z "${{ inputs.piwind_branch }}" ]] || echo "PIWIND_BRANCH=${{ inputs.ppiwind_branch }}" >> $GITHUB_ENV
        if [[ ! -z "${{ inputs.from_image }}" ]]; then
           echo "FROM_IMAGE=$(echo "${{ inputs.from_image }}" | cut -d: -f1)" >> $GITHUB_ENV
           echo "FROM_TAG=$(echo "${{ inputs.from_image }}" | cut -d: -f2)" >> $GITHUB_ENV
        fi

    - name: Github context
      run:   echo "$GITHUB_CONTEXT"
      shell: bash
      env:
       GITHUB_CONTEXT: ${{ toJson(github) }}

    - uses: actions/checkout@v3
      with:
        repository: OasisLMF/OasisPiWind
        ref: ${{ env.PIWIND_BRANCH }}

    - name: Login to Docker Hub
      if: inputs.docker_push == 'true'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

#  Secound build arg is ignored in github actions ??? works locally --> try using 'docker/build-push-action'
#  see https://github.com/docker/build-push-action/issues/174
  
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        file: ${{ env.DOCKERFILE }}
        context: .
        push: ${{ inputs.docker_push }}
        tags: ${{ env.PIWIND_IMAGE }}
        build-args: |
          worker_img=${{ env.FROM_IMAGE }}:${{ env.FROM_TAG }}
    #    docker build -f ${{ env.DOCKERFILE }} --pull --build-arg worker_img=${{ env.FROM_IMAGE }} --build-arg worker_ver=${{ env.FROM_TAG }} -t ${{ env.PIWIND_IMAGE }} .

    - name: Output image 
      if: inputs.docker_push == 'true'
      id: docker_push
      run: |
        #docker push ${{ env.PIWIND_IMAGE }}
        echo "image=${{ env.PIWIND_IMAGE }}" >> $GITHUB_OUTPUT
        # link image url to run summary
        REPO=$(echo "${{ env.PIWIND_IMAGE }}" | cut -d: -f1)
        TAG=$(echo "${{ env.PIWIND_IMAGE }}" | cut -d: -f2)
        echo "### Docker Image:  [${{ env.PIWIND_IMAGE }}](https://hub.docker.com/r/${REPO}/tags?name=${TAG)" >> $GITHUB_STEP_SUMMARY
